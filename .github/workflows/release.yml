name: Deploy SST Application to AWS

on:
  push:
    branches:
      - main

permissions:
  id-token: write # Grants permission to request an OIDC token
  contents: read # Grants read access to repository contents (necessary for checkout)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      #     aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.14.2
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4.0.1
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Add SST and install dependencies
        run: pnpm add sst --save-exact --workspace-root && pnpm install --frozen-lockfile

      # - name: Deploy application to aws
      #   env:
      #     CLOUDFLARE_DEFAULT_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_DEFAULT_ACCOUNT_ID }}
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #   run: pnpm sst:deploy:prod
